{"version":3,"file":"main.36582aca3465467b26a0.js","mappings":"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","sources":["webpack://satellite-simulator/webpack/runtime/chunk loaded","webpack://satellite-simulator/./src/styles/toaster.css","webpack://satellite-simulator/./src/preloader.ts","webpack://satellite-simulator/./src/physics/body.ts","webpack://satellite-simulator/./src/components/simulated-object.ts","webpack://satellite-simulator/./src/physics/constants.ts","webpack://satellite-simulator/./src/components/planet.ts","webpack://satellite-simulator/./src/physics/collision.ts","webpack://satellite-simulator/./src/physics/simulation.ts","webpack://satellite-simulator/./src/components/simulated-space.ts","webpack://satellite-simulator/./src/textures.ts","webpack://satellite-simulator/./src/components/sun.ts","webpack://satellite-simulator/./src/components/ghost-satellite.ts","webpack://satellite-simulator/./src/components/collision-particles.ts","webpack://satellite-simulator/./src/components/world.ts","webpack://satellite-simulator/./src/styles/toaster.css?324e","webpack://satellite-simulator/./src/interface/toaster.ts","webpack://satellite-simulator/./src/interface/simulation-interface.ts","webpack://satellite-simulator/./src/interface/camera-interface.ts","webpack://satellite-simulator/./src/interface/planet-interface.ts","webpack://satellite-simulator/./src/models.ts","webpack://satellite-simulator/./src/components/trail.ts","webpack://satellite-simulator/./src/components/satellite.ts","webpack://satellite-simulator/./src/interface/satellites-interface.ts","webpack://satellite-simulator/./src/interface/sun-interface.ts","webpack://satellite-simulator/./src/interface/gui-styles-interface.ts","webpack://satellite-simulator/./src/index.ts","webpack://satellite-simulator/./src/app.ts","webpack://satellite-simulator/./src/interface/index.ts","webpack://satellite-simulator/webpack/bootstrap","webpack://satellite-simulator/webpack/runtime/compat get default export","webpack://satellite-simulator/webpack/runtime/define property getters","webpack://satellite-simulator/webpack/runtime/global","webpack://satellite-simulator/webpack/runtime/hasOwnProperty shorthand","webpack://satellite-simulator/webpack/runtime/node module decorator","webpack://satellite-simulator/webpack/runtime/publicPath","webpack://satellite-simulator/webpack/runtime/jsonp chunk loading","webpack://satellite-simulator/webpack/runtime/nonce","webpack://satellite-simulator/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../assets/icons/danger.svg\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../assets/icons/explosion.svg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toast-container {\\n    position: fixed;\\n    bottom: 20px;\\n    left: 20px;\\n    z-index: 100;\\n\\n    display: grid;\\n    justify-items: start;\\n    justify-content: center;\\n    gap: 1rem;\\n}\\n\\n.toast {\\n    min-width: 25ch;\\n    padding: 15px;\\n    padding-left: 55px;\\n    font-size: 1.2rem;\\n\\n    border-radius: 5px;\\n    background-color: rgb(135, 177, 222);\\n\\n    will-change: transform;\\n    position: relative;\\n\\n    /* \\n        Wait for var(--duration) before fading out.\\n        Note that the duration variable is set on the\\n        toast container using JavaScript.\\n     */\\n    animation: fade-in 0.3s ease, slide-in 0.3s ease,\\n        fade-out 0.3s ease var(--duration, 4s);\\n}\\n\\n.toast::before {\\n    content: '';\\n    position: absolute;\\n\\n    top: 50%;\\n    left: 10px;\\n\\n    transform: translateY(-50%);\\n\\n    width: 30px;\\n    height: 30px;\\n}\\n\\n.toast--alert {\\n    background-color: firebrick;\\n    color: white;\\n}\\n\\n.toast--alert::before {\\n    content: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n}\\n\\n.toast--explosion {\\n    background-color: rgb(69 113 161);\\n    color: white;\\n}\\n\\n.toast--explosion::before {\\n    content: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\n}\\n\\n@keyframes fade-in {\\n    from {\\n        opacity: 0;\\n    }\\n\\n    to {\\n        opacity: 1;\\n    }\\n}\\n\\n@keyframes fade-out {\\n    from {\\n        opacity: 1;\\n    }\\n\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\\n@keyframes slide-in {\\n    from {\\n        transform: translateY(5vh);\\n    }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/toaster.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,eAAe;IACf,YAAY;IACZ,UAAU;IACV,YAAY;;IAEZ,aAAa;IACb,oBAAoB;IACpB,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,kBAAkB;IAClB,iBAAiB;;IAEjB,kBAAkB;IAClB,oCAAoC;;IAEpC,sBAAsB;IACtB,kBAAkB;;IAElB;;;;MAIE;IACF;8CAC0C;AAC9C;;AAEA;IACI,WAAW;IACX,kBAAkB;;IAElB,QAAQ;IACR,UAAU;;IAEV,2BAA2B;;IAE3B,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,2BAA2B;IAC3B,YAAY;AAChB;;AAEA;IACI,gDAA0C;AAC9C;;AAEA;IACI,iCAAiC;IACjC,YAAY;AAChB;;AAEA;IACI,gDAA6C;AACjD;;AAEA;IACI;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,0BAA0B;IAC9B;AACJ\",\"sourcesContent\":[\".toast-container {\\n    position: fixed;\\n    bottom: 20px;\\n    left: 20px;\\n    z-index: 100;\\n\\n    display: grid;\\n    justify-items: start;\\n    justify-content: center;\\n    gap: 1rem;\\n}\\n\\n.toast {\\n    min-width: 25ch;\\n    padding: 15px;\\n    padding-left: 55px;\\n    font-size: 1.2rem;\\n\\n    border-radius: 5px;\\n    background-color: rgb(135, 177, 222);\\n\\n    will-change: transform;\\n    position: relative;\\n\\n    /* \\n        Wait for var(--duration) before fading out.\\n        Note that the duration variable is set on the\\n        toast container using JavaScript.\\n     */\\n    animation: fade-in 0.3s ease, slide-in 0.3s ease,\\n        fade-out 0.3s ease var(--duration, 4s);\\n}\\n\\n.toast::before {\\n    content: '';\\n    position: absolute;\\n\\n    top: 50%;\\n    left: 10px;\\n\\n    transform: translateY(-50%);\\n\\n    width: 30px;\\n    height: 30px;\\n}\\n\\n.toast--alert {\\n    background-color: firebrick;\\n    color: white;\\n}\\n\\n.toast--alert::before {\\n    content: url('../assets/icons/danger.svg');\\n}\\n\\n.toast--explosion {\\n    background-color: rgb(69 113 161);\\n    color: white;\\n}\\n\\n.toast--explosion::before {\\n    content: url('../assets/icons/explosion.svg');\\n}\\n\\n@keyframes fade-in {\\n    from {\\n        opacity: 0;\\n    }\\n\\n    to {\\n        opacity: 1;\\n    }\\n}\\n\\n@keyframes fade-out {\\n    from {\\n        opacity: 1;\\n    }\\n\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\\n@keyframes slide-in {\\n    from {\\n        transform: translateY(5vh);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as THREE from \"three\";\n/**\n * Preloader from: https://codepen.io/Vico-Adomeit/pen/mOwgNW\n * Another interesting option: https://jsfiddle.net/sojzu8a5/1/\n */\nconst preloader = document.querySelector(\"#preloader\");\nconst downloadInfo = document.querySelector(\".download-info\");\nconst itemsCount = document.querySelector(\".items-count\");\nconst loadingManager = THREE.DefaultLoadingManager;\nloadingManager.onLoad = () => {\n    downloadInfo.innerText = \"Loading complete\";\n    setTimeout(() => {\n        preloader.classList.add('fade-out');\n        preloader.addEventListener('transitionend', () => {\n            preloader.remove();\n        });\n    }, 500);\n};\nloadingManager.onProgress = (url, itemsLoaded, itemsTotal) => {\n    // Some files might be base64 encoded, so the URL will fill the entire screen\n    // if it's not trimmed.\n    const fileURL = url.length >= 300 ? url.slice(0, 80) + \"...\" : url;\n    const filesText = itemsLoaded > 1 ? \"files\" : \"file\";\n    downloadInfo.innerText = `Downloading ${fileURL}...`;\n    itemsCount.innerText = `${itemsLoaded} ${filesText} out of ${itemsTotal}`;\n};\nloadingManager.onError = (url) => console.error(`Error loading ${url}`);\n","export var BodyShape;\n(function (BodyShape) {\n    BodyShape[BodyShape[\"sphere\"] = 0.5] = \"sphere\";\n    BodyShape[BodyShape[\"cylinder\"] = 0.82] = \"cylinder\";\n    BodyShape[BodyShape[\"cube\"] = 1.05] = \"cube\";\n    BodyShape[BodyShape[\"plate\"] = 1.28] = \"plate\";\n})(BodyShape || (BodyShape = {}));\nexport function canExertForce(object) {\n    return \"exertForce\" in object;\n}\nexport function isRigid(object) {\n    return \"onCollision\" in object;\n}\n","import * as THREE from 'three';\nimport { BodyShape } from '../physics/body';\nconst _quaternion = new THREE.Quaternion();\nconst _matrix = new THREE.Matrix4();\nconst _target = new THREE.Vector3();\nconst _position = new THREE.Vector3();\nexport default class SimulatedObject extends THREE.Object3D {\n    constructor(_physicsType, _mass, faceArea = 0, shape = BodyShape.sphere) {\n        super();\n        this._physicsType = _physicsType;\n        this._mass = _mass;\n        this.faceArea = faceArea;\n        this.shape = shape;\n        this.velocity = new THREE.Vector3();\n        this.appliedForces = new THREE.Vector3();\n    }\n    get physicsType() { return this._physicsType; }\n    get mass() { return this._mass; }\n    set mass(value) {\n        this.velocity.multiplyScalar(Math.sqrt(this._mass / value));\n        this._mass = value;\n    }\n    lookAt(vector, y, z) {\n        if (vector instanceof THREE.Vector3)\n            _target.copy(vector);\n        else\n            _target.set(vector, y, z);\n        const parent = this.parent;\n        this.updateWorldMatrix(true, false);\n        _position.setFromMatrixPosition(this.matrixWorld);\n        _matrix.lookAt(_target, _position, this.velocity);\n        this.quaternion.setFromRotationMatrix(_matrix);\n        if (parent) {\n            _matrix.extractRotation(parent.matrixWorld);\n            _quaternion.setFromRotationMatrix(_matrix);\n            this.quaternion.premultiply(_quaternion.invert());\n        }\n    }\n}\n","export const GRAVITATION_CONSTANT = 6.674e-11;\nexport const SIMULATION_SCALE = 1;\nexport const EARTH_MASS = 5.972e24;\nexport const EARTH_RADIUS = 6.371e6;\n/**\n * Distance between Earth and Sun.\n */\nexport const EARTH_DISTANCE = 1.496e11;\nexport const MOON_MASS = 7.34767309e22;\nexport const MOON_RADIUS = 1.737e6;\n/**\n * Distance between Moon and Earth.\n */\nexport const MOON_DISTANCE = 3.844e8;\nexport const SUN_MASS = 1.989e30;\nexport const SUN_RADIUS = 6.955e8;\n","import * as THREE from 'three';\nimport SimulatedObject from 'components/simulated-object';\nimport { EARTH_MASS, EARTH_RADIUS, GRAVITATION_CONSTANT } from 'physics/constants';\nconst tempVector = new THREE.Vector3();\nexport default class Planet extends SimulatedObject {\n    constructor(_radius = EARTH_RADIUS, mass = EARTH_MASS) {\n        super(\"static\" /* BodyType.Static */, mass);\n        this._radius = _radius;\n        this.geometry = new THREE.SphereGeometry(this._radius, 64, 64);\n        this.material = new THREE.MeshStandardMaterial();\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n        this.atmosphereGeometry = new THREE.SphereGeometry(this.radius + this.atmosphereHeight, 64, 64);\n        this.atmosphereMaterial = new THREE.MeshStandardMaterial({\n            transparent: true,\n            opacity: 0.1,\n            color: 0xACFFF3,\n            metalness: 1,\n        });\n        this.atmosphere = new THREE.Mesh(this.atmosphereGeometry, this.atmosphereMaterial);\n        this._atmosphereHeight = EARTH_RADIUS * 0.15;\n        this._atmosphereDensity = 1.29e-10;\n        this.period = 24 * 3600;\n        this.add(this.mesh);\n        this.add(this.atmosphere);\n        this.atmosphere.visible = false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onCollision() { }\n    get collisionRadius() { return this._radius; }\n    get angularVelocity() {\n        return (Math.PI * 2) / this.period;\n    }\n    get radius() {\n        return this._radius;\n    }\n    set radius(value) {\n        this._radius = value;\n        this.geometry.dispose();\n        this.geometry = new THREE.SphereGeometry(this._radius, 64, 64);\n        this.mesh.geometry = this.geometry;\n        this.atmosphereHeight = this._atmosphereHeight; // to trigger the geometry update.\n    }\n    get atmosphereHeight() {\n        return this._atmosphereHeight;\n    }\n    set atmosphereHeight(value) {\n        this._atmosphereHeight = value;\n        this.atmosphere.geometry.dispose();\n        this.atmosphere.geometry = new THREE.SphereGeometry(this._radius + this._atmosphereHeight, 64, 64);\n    }\n    get atmosphereDensity() {\n        return this._atmosphereDensity;\n    }\n    set atmosphereDensity(value) {\n        this._atmosphereDensity = value;\n        this.atmosphereMaterial.opacity = 0.5 - (-Math.log10(value / 1.29e-9) / 2) * 0.4; // idk what's this, but it's something, ~Rami.\n    }\n    get atmosphereVisible() {\n        return this.atmosphere.visible;\n    }\n    set atmosphereVisible(value) {\n        this.atmosphere.visible = value;\n    }\n    get color() {\n        return this.material.color.toArray();\n    }\n    set color(value) {\n        this.material.color.fromArray(value);\n    }\n    get wireframe() {\n        return this.material.wireframe;\n    }\n    set wireframe(value) {\n        this.material.wireframe = value;\n    }\n    get bumpScale() {\n        return this.material.bumpScale;\n    }\n    set bumpScale(value) {\n        this.material.bumpScale = value;\n    }\n    set texture(pack) {\n        var _a, _b, _c, _d, _e, _f;\n        this.material.map = (_a = pack.colorMap) !== null && _a !== void 0 ? _a : null;\n        this.material.bumpMap = (_b = pack.bumpMap) !== null && _b !== void 0 ? _b : null;\n        this.material.bumpScale = (_c = pack.bumpScale) !== null && _c !== void 0 ? _c : 0;\n        this.material.aoMap = (_d = pack.aoMap) !== null && _d !== void 0 ? _d : null;\n        this.material.emissiveMap = (_e = pack.emissiveMap) !== null && _e !== void 0 ? _e : null;\n        this.material.metalnessMap = (_f = pack.metalnessMap) !== null && _f !== void 0 ? _f : null;\n        this.material.needsUpdate = true;\n    }\n    exertForce(body, force) {\n        this.exertGravityForce(body, force);\n        this.exertDragForce(body, force);\n    }\n    exertGravityForce(body, force) {\n        tempVector.subVectors(this.position, body.position);\n        const distanceSq = tempVector.lengthSq();\n        tempVector.normalize().multiplyScalar((GRAVITATION_CONSTANT * this.mass * body.mass) / distanceSq);\n        force.add(tempVector);\n    }\n    exertDragForce(body, force) {\n        const distance = this.position.distanceTo(body.position);\n        if (distance > this.radius + this.atmosphereHeight)\n            return;\n        const bodyVelocity = body.velocity.length();\n        const atmosphereVelocity = this.angularVelocity * distance;\n        const relativeVelocity = bodyVelocity - atmosphereVelocity;\n        const relativeVelocitySq = relativeVelocity * relativeVelocity;\n        const drag = 0.5 * this.atmosphereDensity * relativeVelocitySq * body.shape * body.faceArea;\n        tempVector.copy(body.velocity).normalize().multiplyScalar(-drag);\n        force.add(tempVector);\n    }\n    update(dt) {\n        this.rotateY(dt / this.period * Math.PI * 2);\n    }\n}\n","import * as THREE from 'three';\nconst temporaryVector = new THREE.Vector3();\n// Read more on https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_collision_detection\nexport const sphereCollidesWithSphere = (body, otherBody) => {\n    const distance = temporaryVector.subVectors(body.position, otherBody.position).length();\n    const didCollisionHappen = distance <= body.collisionRadius + otherBody.collisionRadius;\n    return didCollisionHappen;\n};\n","import { remove as _remove } from 'lodash';\nimport * as THREE from 'three';\nimport { canExertForce, isRigid } from \"./body\";\nimport { sphereCollidesWithSphere } from './collision';\nconst temporaryVector = new THREE.Vector3();\n/**\n * A physics simulation using semi-implicit Euler integration.\n * https://en.wikipedia.org/wiki/Semi-implicit_Euler_method\n */\nexport class Simulation {\n    constructor(timeResolution = 1e-2) {\n        this.timeResolution = timeResolution;\n        this.bodies = [];\n        /**\n         * Bodies which can exert forces on other bodies.\n         */\n        this.activeBodies = [];\n        /**\n         * Bodies which can collide into other bodies.\n         */\n        this.rigidBodies = [];\n    }\n    add(body) {\n        this.bodies.push(body);\n        if (canExertForce(body))\n            this.activeBodies.push(body);\n        if (isRigid(body))\n            this.rigidBodies.push(body);\n    }\n    remove(body) {\n        const filter = (other) => other === body;\n        _remove(this.bodies, filter);\n        _remove(this.activeBodies, filter);\n        _remove(this.rigidBodies, filter);\n    }\n    /**\n     * Run the simulation for a given amount of time.\n     * @param delta in seconds.\n     */\n    run(delta) {\n        while (delta > 0) {\n            const step = Math.min(delta, this.timeResolution);\n            delta -= step;\n            // calculate the applied forces for each body\n            this.calculateAppliedForces();\n            // integrate the acceleration into velocity\n            this.integrateBodiesAcceleration(step);\n            // integrate the velocity into displacement\n            this.integrateBodiesVelocity(step);\n            this.checkCollisions();\n        }\n    }\n    calculateAppliedForces() {\n        for (const body of this.bodies) {\n            body.appliedForces.set(0, 0, 0);\n            for (const activeBody of this.activeBodies) {\n                /**\n                 * (alias for the shared temporary vector).\n                 */\n                const exertedForce = temporaryVector.set(0, 0, 0);\n                activeBody.exertForce(body, exertedForce);\n                body.appliedForces.add(exertedForce);\n            }\n        }\n    }\n    integrateBodiesAcceleration(step) {\n        for (const body of this.bodies) {\n            /**\n             * (alias for the shared temporary vector).\n             */\n            const acceleration = temporaryVector.copy(body.appliedForces).divideScalar(body.mass);\n            /**\n             * (alias for the shared temporary vector).\n             */\n            const deltaVelocity = acceleration.multiplyScalar(step);\n            body.velocity.add(deltaVelocity);\n        }\n    }\n    integrateBodiesVelocity(step) {\n        for (const body of this.bodies) {\n            // skip any static object.\n            if (body.physicsType === \"static\" /* BodyType.Static */)\n                continue;\n            /**\n             * (alias for the shared temporary vector).\n             */\n            const displacement = temporaryVector.copy(body.velocity).multiplyScalar(step);\n            body.position.add(displacement);\n        }\n    }\n    checkCollisions() {\n        for (const body of this.rigidBodies) {\n            for (const otherBody of this.rigidBodies) {\n                if (body === otherBody)\n                    continue;\n                if (sphereCollidesWithSphere(body, otherBody)) {\n                    body.onCollision();\n                    otherBody.onCollision();\n                }\n            }\n        }\n    }\n}\n","import * as THREE from 'three';\nimport { Simulation } from 'physics/simulation';\nexport default class SimulatedSpace {\n    constructor(timeResolution) {\n        this.scene = new THREE.Scene();\n        this.simulation = new Simulation(timeResolution);\n    }\n    get timeResolution() {\n        return this.simulation.timeResolution;\n    }\n    set timeResolution(value) {\n        this.simulation.timeResolution = value;\n    }\n    add(body) {\n        this.scene.add(body);\n        this.simulation.add(body);\n    }\n    remove(body) {\n        this.scene.remove(body);\n        this.simulation.remove(body);\n    }\n    /**\n     * Run the simulation for a given amount of time.\n     * @param delta in seconds.\n     */\n    run(delta) {\n        this.simulation.run(delta);\n    }\n    /**\n     * Adds the scene of the simulated space into the given scene.\n     */\n    addTo(scene) {\n        scene.add(this.scene);\n    }\n    /**\n     * Removes the scene of the simulated space from the given scene.\n     */\n    removeFrom(scene) {\n        scene.remove(this.scene);\n    }\n}\n","import * as THREE from 'three';\nimport earthColorMap from 'assets/earth/color-map.jpg';\nimport earthBumpMap from 'assets/earth/bump-map.jpg';\nimport jupiterColorMap from 'assets/jupiter/color-map.jpg';\nimport marsColorMap from 'assets/mars/color-map.jpg';\nimport marsBumpMap from 'assets/mars/bump-map.jpg';\nimport sunColorMap from 'assets/sun/color-map.jpg';\nimport skyboxNX from 'assets/skybox/nx.jpg';\nimport skyboxNY from 'assets/skybox/ny.jpg';\nimport skyboxNZ from 'assets/skybox/nz.jpg';\nimport skyboxPX from 'assets/skybox/px.jpg';\nimport skyboxPY from 'assets/skybox/py.jpg';\nimport skyboxPZ from 'assets/skybox/pz.jpg';\nimport lensflareBase from 'assets/lensflare/lensflare0_alpha.png';\nimport lensflareExtra from 'assets/lensflare/lensflare3.png';\nconst loader = new THREE.TextureLoader();\nconst cubeLoader = new THREE.CubeTextureLoader();\nexport const earthTexture = {\n    colorMap: loader.load(earthColorMap),\n    bumpMap: loader.load(earthBumpMap),\n    bumpScale: 250e3,\n};\nexport const jupiterTexture = {\n    colorMap: loader.load(jupiterColorMap),\n};\nexport const marsTexture = {\n    colorMap: loader.load(marsColorMap),\n    bumpMap: loader.load(marsBumpMap),\n    bumpScale: 600e3,\n};\nexport const sunTexture = {\n    colorMap: loader.load(sunColorMap),\n};\nexport const skyBoxTexture = cubeLoader.load([\n    skyboxPX,\n    skyboxNX,\n    skyboxPY,\n    skyboxNY,\n    skyboxPZ,\n    skyboxNZ,\n]);\nexport const lensflareBaseTexture = loader.load(lensflareBase);\nexport const lensflareExtraTexture = loader.load(lensflareExtra);\n","import * as THREE from 'three';\nimport { Lensflare, LensflareElement } from 'three/examples/jsm/objects/Lensflare';\nimport { lensflareBaseTexture, lensflareExtraTexture, sunTexture } from 'textures';\nimport { EARTH_DISTANCE, SUN_RADIUS } from 'physics/constants';\nexport default class Sun extends THREE.Object3D {\n    constructor(_radius = SUN_RADIUS, distance = EARTH_DISTANCE) {\n        var _a;\n        super();\n        this._radius = _radius;\n        this.geometry = new THREE.SphereGeometry(this._radius, 64, 64);\n        this.material = new THREE.MeshBasicMaterial({\n            map: (_a = sunTexture.colorMap) !== null && _a !== void 0 ? _a : null,\n        });\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n        this.light = new THREE.PointLight(0xffffff, 2 * Math.pow(10, 22.8), 0, 2);\n        this.add(this.mesh);\n        this.add(this.light);\n        this.lensflareScaler = 1; // initialize the lensflare.\n        this.position.z = distance;\n    }\n    get wireframe() {\n        return this.material.wireframe;\n    }\n    set wireframe(value) {\n        this.material.wireframe = value;\n    }\n    get radius() {\n        return this._radius;\n    }\n    set radius(value) {\n        this._radius = value;\n        this.geometry.dispose();\n        this.geometry = new THREE.SphereGeometry(this._radius, 64, 64);\n        this.mesh.geometry = this.geometry;\n    }\n    get distance() {\n        return this.position.z;\n    }\n    set distance(value) {\n        this.position.z = value;\n    }\n    get intensity() {\n        return this.light.intensity;\n    }\n    set intensity(value) {\n        this.light.intensity = value;\n    }\n    get color() {\n        return this.light.color.toArray();\n    }\n    set color(value) {\n        this.light.color.fromArray(value);\n        this.material.color.fromArray(value);\n    }\n    set lensflareScaler(value) {\n        this.light.clear();\n        const lensflare = new Lensflare();\n        lensflare.addElement(new LensflareElement(lensflareBaseTexture, 700 * value, 0, this.light.color));\n        lensflare.addElement(new LensflareElement(lensflareExtraTexture, 60 * value, 0.1, this.light.color));\n        lensflare.addElement(new LensflareElement(lensflareExtraTexture, 70 * value, 0.2, this.light.color));\n        lensflare.addElement(new LensflareElement(lensflareExtraTexture, 120 * value, 0.3, this.light.color));\n        this.light.add(lensflare);\n    }\n}\n","import * as THREE from 'three';\nconst geometry = new THREE.SphereGeometry(7e5, 4, 2);\nconst material = new THREE.MeshBasicMaterial({\n    opacity: .5,\n    color: 0xff00ff,\n    wireframe: true,\n});\nconst tempVector = new THREE.Vector3();\n/**\n * This is the invisible satellite that appears when the user\n * checks the `preview` box. This satellite has helper axes\n * which show the user where the satellite will orbit according\n * to the parameters he chooses from the gui.\n */\nexport default class GhostSatellite extends THREE.Object3D {\n    constructor() {\n        super();\n        this.positionArrow = new THREE.ArrowHelper(undefined, undefined, undefined, 0xff0000, .05, .01);\n        this.velocityArrow = new THREE.ArrowHelper(undefined, undefined, undefined, 0xffff00, .1, .05);\n        this.body = new THREE.Mesh(geometry, material);\n        this.add(this.positionArrow);\n        this.add(this.velocityArrow);\n        // this.add(this.body);\n        this.visible = false; // invisible by default.\n        // this.positionArrow.visible = false;\n    }\n    set state({ position, velocity }) {\n        this.body.position.copy(position);\n        this.velocityArrow.setLength(velocity.length() * 2e2);\n        this.velocityArrow.setDirection(tempVector.copy(velocity).normalize());\n        this.velocityArrow.position.copy(position);\n        this.positionArrow.setLength(position.length());\n        this.positionArrow.setDirection(tempVector.copy(position).normalize());\n    }\n}\n","import * as THREE from 'three';\n// Reference: https://codepen.io/Xanmia/pen/nqyMgJ\nexport default class CollisionParticles extends THREE.Object3D {\n    constructor(collisionPosition = new THREE.Vector3(0, 0, 0)) {\n        super();\n        this.collisionPosition = collisionPosition;\n        this.geometry = new THREE.BufferGeometry();\n        this.material = new THREE.PointsMaterial({\n            color: 0xffbb11,\n            size: 0.2e6,\n            transparent: true,\n            opacity: 1\n        });\n        this.mesh = new THREE.Points(this.geometry, this.material);\n        this.particlesMovementSpeed = 0.5e6;\n        this.PARTICLES_COUNT = 100;\n        /**\n         * The rate at which the particles material fades out per second.\n         */\n        this.fadeOutFactor = 0.001;\n        // Create particles and velocities arrays\n        this.particles = new Float32Array(this.PARTICLES_COUNT * 3);\n        this.particleVelocities = new Float32Array(this.PARTICLES_COUNT * 3);\n        // Set the position attribute in the geometry buffer to take values from the particles array\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(this.particles, 3));\n        this.initializeParticles();\n        this.add(this.mesh);\n    }\n    initializeParticles() {\n        for (let i = 0; i < this.PARTICLES_COUNT; i++) {\n            this.particles[i * 3 + 0] = this.collisionPosition.x;\n            this.particles[i * 3 + 1] = this.collisionPosition.y;\n            this.particles[i * 3 + 2] = this.collisionPosition.z;\n            this.particleVelocities[i * 3 + 0] = Math.random() * this.particlesMovementSpeed - this.particlesMovementSpeed / 2;\n            this.particleVelocities[i * 3 + 1] = Math.random() * this.particlesMovementSpeed - this.particlesMovementSpeed / 2;\n            this.particleVelocities[i * 3 + 2] = Math.random() * this.particlesMovementSpeed - this.particlesMovementSpeed / 2;\n        }\n    }\n    update(dt) {\n        // Don't forget that it's multiplied by 3 here!\n        for (let i = 0; i < this.PARTICLES_COUNT * 3; i++) {\n            this.particles[i] += this.particleVelocities[i];\n        }\n        this.material.opacity -= this.fadeOutFactor * dt;\n        this.geometry.attributes.position.needsUpdate = true;\n    }\n    /**\n     * Returns whether the collision animation is done.\n     */\n    isDone() {\n        return this.material.opacity <= 0;\n    }\n}\n","import * as THREE from 'three';\nimport Planet from 'components/planet';\nimport SimulatedSpace from 'components/simulated-space';\nimport Sun from 'components/sun';\nimport GhostSatellite from 'components/ghost-satellite';\nimport CollisionParticles from 'components/collision-particles';\nimport { remove as _remove } from 'lodash';\nimport { EARTH_RADIUS } from 'physics/constants';\nimport { skyBoxTexture } from 'textures';\nexport default class World extends THREE.Scene {\n    constructor() {\n        super();\n        this.clock = new THREE.Clock();\n        this.simulatedSpace = new SimulatedSpace(1e-2);\n        this.sun = new Sun();\n        this.planet = new Planet();\n        this.ghost = new GhostSatellite();\n        this.satellites = [];\n        this.paused = false;\n        this.timescale = 1;\n        this.collisions = [];\n        this.add(new THREE.AxesHelper(EARTH_RADIUS / 10));\n        this.add(new THREE.AmbientLight(0xffffff, 0.5));\n        this.add(this.sun);\n        this.add(this.ghost);\n        this.simulatedSpace.addTo(this);\n        this.simulatedSpace.add(this.planet);\n        this.background = skyBoxTexture;\n        this.planet.rotateY(Math.PI * -0.7);\n    }\n    get timeResolution() {\n        return this.simulatedSpace.timeResolution;\n    }\n    set timeResolution(value) {\n        this.simulatedSpace.timeResolution = value;\n    }\n    update() {\n        if (this.paused)\n            return;\n        /**\n         * The (% (1 / 30)) trick is to prevent prevent frames\n         * from taking more than 1 / 30 seconds to render,\n         * regardlessof the actual time needed to render them on the hardware.\n         */\n        const dt = (this.clock.getDelta() % (1 / 30)) * this.timescale;\n        this.simulatedSpace.run(dt);\n        this.planet.update(dt);\n        this.satellites.forEach((satellite) => {\n            satellite.lookAt(this.planet.position);\n            satellite.update();\n        });\n        this.collisions.forEach((collision) => {\n            collision.update(dt);\n            if (collision.isDone()) {\n                _remove(this.collisions, (obj) => obj === collision);\n                this.remove(collision);\n            }\n        });\n    }\n    addSatellite(satellite) {\n        this.satellites.push(satellite);\n        this.simulatedSpace.add(satellite);\n        this.add(satellite.trail);\n        satellite.addDestructionListener((satellite) => {\n            const collisionParticles = new CollisionParticles(satellite.position);\n            this.collisions.push(collisionParticles);\n            this.add(collisionParticles);\n            this.removeSatellite(satellite);\n            if (this.onSatelliteDestruction)\n                this.onSatelliteDestruction(satellite);\n        });\n    }\n    removeSatellite(satellite) {\n        this.remove(satellite.trail);\n        _remove(this.satellites, (obj) => obj === satellite);\n        this.simulatedSpace.remove(satellite);\n    }\n}\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./toaster.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./toaster.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * ## Reference URLs:\n *\n * - FLIP technique: https://aerotwist.com/blog/flip-your-animations/\n * - Why FLIP is useful: https://www.joshwcomeau.com/react/animating-the-unanimatable/\n * - Creating a toast component: https://web.dev/building-a-toast-component/\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport 'styles/toaster.css';\nexport default class Toaster {\n    constructor() {\n        /**\n         * How long the toast stays in the page before removing it.\n         */\n        this.toastDuration = '4s';\n        this.toastContainer = document.createElement('section');\n        this.toastContainer.classList.add('toast-container');\n        this.toastContainer.style.setProperty('--duration', this.toastDuration);\n        document.body.append(this.toastContainer);\n    }\n    /**\n     * Creates a DOM node representing a toast.\n     */\n    createToast(text, type) {\n        const toast = document.createElement('output');\n        toast.innerText = text;\n        toast.classList.add('toast');\n        toast.classList.add(`toast--${type}`);\n        toast.setAttribute('role', 'status');\n        return toast;\n    }\n    addToastAndAnimateContainer(toast) {\n        const heightBeforeAppending = this.toastContainer.offsetHeight;\n        this.toastContainer.appendChild(toast);\n        const heightAfterAppending = this.toastContainer.offsetHeight;\n        const heightDifference = heightAfterAppending - heightBeforeAppending;\n        const keyframes = [\n            { transform: `translateY(${heightDifference}px)` },\n            { transform: 'translateY(0)' },\n        ];\n        this.toastContainer.animate(keyframes, {\n            duration: 150,\n            easing: 'ease-out',\n        });\n    }\n    /**\n     * Adds a toast to the toasts container.\n     * @param toast\n     */\n    addToast(toast) {\n        /**\n         * Animate the toast container if it has previous children,\n         * otherwise just append the toast.\n         */\n        if (this.toastContainer.children.length)\n            this.addToastAndAnimateContainer(toast);\n        else\n            this.toastContainer.append(toast);\n    }\n    /**\n     * Displays a new toast on the screen.\n     */\n    toast(text, type = 'alert') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const toast = this.createToast(text, type);\n            this.addToast(toast);\n            // Wait until all CSS animations are done then remove it from the DOM.\n            yield Promise.allSettled(toast.getAnimations().map((animation) => animation.finished));\n            this.toastContainer.removeChild(toast);\n        });\n    }\n}\n","export default class SimulationInterface {\n    constructor(gui, app) {\n        this.gui = gui;\n        this.app = app;\n        this.folder = this.gui.addFolder('Simulation');\n        this.resolution = Math.log10(this.app.world.timeResolution);\n        this.timescale = this.app.world.timescale;\n        this.paused = false;\n        this.folder.open(false); // closed by default.\n        this.folder.add(this, 'resolution').name('Time resolution').min(-8).max(2).step(1);\n        this.folder.add(this, 'timescale').name('Time scale').min(0.1).max(1e4).step(1);\n        this.folder.add(this, 'paused').name('Pause');\n        this.folder.onChange(this.apply.bind(this));\n    }\n    hotReplaceApplication(app) {\n        this.app = app;\n        this.apply();\n    }\n    apply() {\n        this.app.world.timeResolution = Math.pow(10, this.resolution);\n        this.app.world.timescale = this.timescale;\n        this.app.world.paused = this.paused;\n    }\n}\n","import { EARTH_RADIUS } from 'physics/constants';\nexport default class CameraInterface {\n    constructor(gui, app) {\n        this.gui = gui;\n        this.app = app;\n        this.folder = this.gui.addFolder('Camera');\n        this.actions = {\n            reset: this.reset.bind(this),\n            lookAtOrigin: this.lookAtOrigin.bind(this),\n            lookAtX: this.lookAtX.bind(this),\n            lookAtY: this.lookAtY.bind(this),\n            lookAtZ: this.lookAtZ.bind(this),\n        };\n        this.folder.open(false); // closed by default.\n        this.folder.add(this.actions, 'lookAtX').name('Look at X axis');\n        this.folder.add(this.actions, 'lookAtY').name('Look at Y axis');\n        this.folder.add(this.actions, 'lookAtZ').name('Look at Z axis');\n        this.folder.add(this.actions, 'lookAtOrigin').name('Look at origin (planet)');\n        this.folder.add(this.actions, 'reset').name('Reset');\n    }\n    hotReplaceApplication(app) {\n        this.app = app;\n    }\n    reset() {\n        this.app.controls.reset();\n        this.app.camera.position.z = EARTH_RADIUS * 4;\n    }\n    lookAtOrigin() {\n        this.app.controls.target.set(0, 0, 0);\n        this.app.controls.update();\n    }\n    lookAtX() {\n        const distance = this.app.camera.position.length();\n        this.app.camera.position.set(distance, 0, 0);\n        this.app.controls.update();\n    }\n    lookAtY() {\n        const distance = this.app.camera.position.length();\n        this.app.camera.position.set(0, distance, 0);\n        this.app.controls.update();\n    }\n    lookAtZ() {\n        const distance = this.app.camera.position.length();\n        this.app.camera.position.set(0, 0, distance);\n        this.app.controls.update();\n    }\n}\n","import { earthTexture, jupiterTexture, marsTexture } from 'textures';\nconst textures = {\n    abstract: {},\n    earth: earthTexture,\n    jupiter: jupiterTexture,\n    mars: marsTexture,\n};\nconst texturesOptions = Object.keys(textures).map(key => `${key.charAt(0).toUpperCase()}${key.slice(1)}`);\nexport default class PlanetInterface {\n    constructor(gui, app) {\n        var _a;\n        this.gui = gui;\n        this.app = app;\n        this.folder = this.gui.addFolder('Planet');\n        this.radius = this.app.world.planet.radius;\n        this.mass = this.app.world.planet.mass;\n        this.color = this.app.world.planet.color;\n        this.wireframe = this.app.world.planet.wireframe;\n        this.texture = texturesOptions[1];\n        this.bumpScale = (_a = textures.earth.bumpScale) !== null && _a !== void 0 ? _a : 0;\n        this.atmosphereDensity = this.app.world.planet.atmosphereDensity;\n        this.atmosphereHeight = this.app.world.planet.atmosphereHeight;\n        this.atmosphereVisible = this.app.world.planet.atmosphereVisible;\n        this.folder.open(false); // closed by default.\n        this.folder.add(this, 'period').name('Period').min(1).max(48).step(1);\n        this.folder.add(this, 'texture', texturesOptions).name('Texture')\n            .onChange(() => {\n            var _a, _b;\n            this.bumpScale = (_a = textures[`${this.texture.charAt(0).toLowerCase()}${this.texture.slice(1)}`].bumpScale) !== null && _a !== void 0 ? _a : 0;\n            (_b = this.folder.controllers.find(c => c.property === 'bumpScale')) === null || _b === void 0 ? void 0 : _b.updateDisplay();\n        });\n        this.folder.add(this, 'bumpScale').name('Bump Scale').min(1e5).max(1e6)\n            .onChange(() => this.app.world.planet.bumpScale = this.bumpScale);\n        this.folder.add(this, 'radius').name('Radius').min(this.app.world.planet.radius * .5).max(this.app.world.planet.radius * 5);\n        this.folder.add(this, 'mass').name('Mass')\n            .min(this.app.world.planet.mass)\n            .max(this.app.world.planet.mass * 100);\n        this.folder.add(this, 'atmosphereVisible').name('Show Atmosphere');\n        this.folder.add(this, 'atmosphereDensity').name('Atmosphere Density').min(this.atmosphereDensity / 20).max(this.atmosphereDensity * 10);\n        this.folder.add(this, 'atmosphereHeight').name('Atmosphere Height').min(this.atmosphereHeight / 10).max(this.atmosphereHeight * 4);\n        this.folder.addColor(this, 'color').name('Color');\n        this.folder.add(this, 'wireframe').name('Wireframe');\n        this.folder.onChange(this.apply.bind(this));\n        this.apply();\n    }\n    get period() {\n        return this.app.world.planet.period / 3600;\n    }\n    set period(value) {\n        this.app.world.planet.period = value * 3600;\n    }\n    hotReplaceApplication(app) {\n        this.app = app;\n        this.apply();\n    }\n    apply() {\n        // TODO: could change planet physics in addition of texture (presets).\n        this.app.world.planet.texture = textures[`${this.texture.charAt(0).toLowerCase()}${this.texture.slice(1)}`];\n        this.app.world.planet.radius = this.radius;\n        this.app.world.planet.mass = this.mass;\n        this.app.world.planet.color = this.color;\n        this.app.world.planet.wireframe = this.wireframe;\n        this.app.world.planet.atmosphereDensity = this.atmosphereDensity;\n        this.app.world.planet.atmosphereHeight = this.atmosphereHeight;\n        this.app.world.planet.atmosphereVisible = this.atmosphereVisible;\n    }\n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport satellite from 'assets/satellite/Satellite.glb';\nconst gltfLoader = new GLTFLoader();\nexport const satelliteModel = gltfLoader.loadAsync(satellite);\n","import * as THREE from \"three\";\n// Drawing dynamic lines: https://stackoverflow.com/questions/31399856/drawing-a-line-with-three-js-dynamically\nconst material = new THREE.PointsMaterial({\n    color: \"yellow\",\n    size: 20\n});\n/**\n * A trail of points that follows the position of a given object.\n */\nexport default class Trail extends THREE.Object3D {\n    constructor(followedObject, MAX_TRAIL_POINTS = 1000) {\n        super();\n        this.followedObject = followedObject;\n        this.MAX_TRAIL_POINTS = MAX_TRAIL_POINTS;\n        this.positions = new Float32Array(this.MAX_TRAIL_POINTS * 3);\n        this.geometry = new THREE.BufferGeometry();\n        this.points = new THREE.Points(this.geometry, material);\n        this.currentDrawingIndex = 0;\n        this.hasReachedMaxTrailPoints = false;\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(this.positions, 3));\n        this.add(this.points);\n    }\n    update() {\n        /**\n         * Each vertex in the trail has three entries in the poisitions array (x, y, z)\n         */\n        this.positions[this.currentDrawingIndex * 3 + 0] = this.followedObject.position.x;\n        this.positions[this.currentDrawingIndex * 3 + 1] = this.followedObject.position.y;\n        this.positions[this.currentDrawingIndex * 3 + 2] = this.followedObject.position.z;\n        this.currentDrawingIndex++;\n        /**\n         * Reset drawing index once we reach the maximum trail points limit.\n         */\n        if (this.currentDrawingIndex == this.MAX_TRAIL_POINTS) {\n            this.hasReachedMaxTrailPoints = true;\n            this.currentDrawingIndex = 0;\n        }\n        /**\n         * If we reached the maximum number of vertices we can draw\n         * for a trail, then overwrite their values from the start of the buffer\n         * and stop incrementing `verticesToDraw` in `this.geometry.setDrawRange(0, verticesToDraw)`\n         *\n         * I.e. after we reach the limit the first vertex in the buffer represents\n         * the last point in the trail, the second vertex represents (last - 1) point from\n         * tail, and so on.\n         *\n         * Otherwise, draw one vertex by one vertex to create a smooth effect.\n         */\n        const verticesToDraw = this.hasReachedMaxTrailPoints ?\n            this.MAX_TRAIL_POINTS :\n            this.currentDrawingIndex;\n        this.geometry.setDrawRange(0, verticesToDraw);\n        this.geometry.attributes.position.needsUpdate = true;\n    }\n}\n","import * as THREE from 'three';\nimport { satelliteModel } from 'models';\nimport SimulatedObject from 'components/simulated-object';\nimport Trail from 'components/trail';\nconst geometry = new THREE.SphereGeometry(7e5, 4, 2);\nconst material = new THREE.MeshBasicMaterial({\n    color: 0x00ffff,\n    wireframe: true,\n});\nexport default class Satellite extends SimulatedObject {\n    constructor(mass = 10) {\n        super(\"dynamic\" /* BodyType.Dynamic */, mass, 100);\n        this.mesh = new THREE.Mesh(geometry, material);\n        this.collisionRadius = Satellite.defaultCollisionRadius;\n        /**\n         * A an array of subscribers that will be notified\n         * when the satellite is destroyed.\n         */\n        this.destructionListeners = [];\n        this.trail = new Trail(this);\n        this.add(this.mesh);\n        satelliteModel.then(({ scene }) => {\n            const model = scene.clone(true);\n            model.scale.multiplyScalar(7e4);\n            this.remove(this.mesh);\n            this.add(model);\n        });\n    }\n    onCollision() {\n        this.destructionListeners.forEach((listener) => listener(this));\n    }\n    addDestructionListener(listener) {\n        this.destructionListeners.push(listener);\n    }\n    static spawn(position, velocity, mass = 10) {\n        const satellite = new Satellite(mass);\n        satellite.position.copy(position);\n        satellite.velocity.copy(velocity);\n        return satellite;\n    }\n    update() {\n        this.trail.update();\n    }\n}\nSatellite.defaultCollisionRadius = 7e5;\n","import { Euler, Spherical, Vector3 } from 'three';\nimport { EARTH_RADIUS } from 'physics/constants';\nimport Satellite from 'components/satellite';\nconst TO_DEGREE = 180 / Math.PI;\nconst TO_RADIAN = Math.PI / 180;\nconst tempEuler = new Euler();\nconst tempSpherical = new Spherical();\nconst tempVector = new Vector3();\nfunction fixAngle(radian) {\n    return (radian < -Math.PI) ? (radian + Math.PI + Math.PI) : radian;\n}\nfunction isCritical(angle) {\n    const critical = 1e-6, angle2 = Math.abs(angle);\n    return angle2 > Math.PI - critical || angle2 < critical;\n}\n/**\n * The display name for creating a new satellite.\n */\nconst NEW_SATELLITE = '(new)';\n// RAMI THIS CLASS IS TOO CHONKY\nexport default class SatellitesInterface {\n    constructor(gui, app) {\n        // this.folder.open(false); // closed by default.\n        this.gui = gui;\n        this.app = app;\n        this.folder = this.gui.addFolder('Satellites');\n        this.nextSatelliteId = 1;\n        /**\n         * |           |                     |\n         * |-----------|---------------------|\n         * | `id = -1` | new satellite.      |\n         * | `id >= 0` | existing satellite. |\n         */\n        this._satelliteId = -1;\n        this.spawnPosition = new Vector3(EARTH_RADIUS * 1.25, 0, 0);\n        this.spawnVelocity = new Vector3(0, 0, -7e3);\n        this.satellite = this.newDraftSatellite();\n        this._calculatedPosition = new Vector3();\n        this._height = 0;\n        this._longitude = 0;\n        this._latitude = 0;\n        this._calculatedVelocity = new Vector3();\n        this._velocity = 0;\n        this._inclination = 0;\n        this._theta = 90 * TO_RADIAN;\n        this._scale = 1;\n        this.preview = this.app.world.ghost.visible;\n        this.actionBound = this.action.bind(this);\n        // Had to use a folder, because then the controller is updated, it's placed at the end of the folder.\n        // And so storing it in a folder alone would prevent it from being pushed to the end of the list.\n        this.satelliteController = this.folder.addFolder('').add(this, 'selectedSatelliteOption', [NEW_SATELLITE]).name('Satellite');\n        this.folder.add(this, 'preview').name('Preview');\n        this.folder.add(this, 'follow').name('Follow');\n        this.folder.add(this, 'name').name('Name');\n        this.folder.add(this, 'scale').name('Scale').min(0.000001).max(1).step(0.0001);\n        this.folder.add(this, 'mass').name('Mass').min(1).max(1e6);\n        this.folder.add(this, 'shape').name('Shape').min(0).max(1);\n        this.folder.add(this, 'faceArea').name('Face Area').min(1).max(1e4);\n        this.folder.add(this, 'velocity').name('Velocity').min(1e3).max(1e5);\n        this.folder.add(this, 'height').name('Height').min(EARTH_RADIUS * 1.25).max(EARTH_RADIUS * 10);\n        this.folder.add(this, 'longitude').name('Longitude').min(-180).max(180).listen();\n        this.folder.add(this, 'latitude').name('Latitude').min(-90).max(90).listen();\n        this.folder.add(this, 'inclination').name('Inclination').min(-180).max(180).listen();\n        this.folder.add(this, 'theta').name('Theta').min(0).max(180).listen();\n        this.actionController = this.folder.add(this, 'actionBound').name('Spawn Satellite');\n        this.folder.onChange(this.apply.bind(this));\n        this.apply();\n    }\n    get satelliteId() {\n        return this._satelliteId;\n    }\n    set satelliteId(value) {\n        this._satelliteId = value;\n        this.satellite = (value === -1) ? this.newDraftSatellite() : this.app.world.satellites[value];\n        if (this.follow)\n            this.follow = true; // trigger it to update the followed satellite\n        this.refreshInterface();\n    }\n    get name() {\n        return this.satellite.name;\n    }\n    set name(value) {\n        this.satellite.name = value;\n        if (this.satelliteId !== -1)\n            this.updateSatellitesList();\n    }\n    get mass() {\n        return this.satellite.mass;\n    }\n    set mass(value) {\n        this.satellite.mass = value;\n    }\n    get shape() {\n        return this.satellite.shape;\n    }\n    set shape(value) {\n        this.satellite.shape = value;\n    }\n    get faceArea() {\n        return this.satellite.faceArea;\n    }\n    set faceArea(value) {\n        this.satellite.faceArea = value;\n    }\n    updatePosition() {\n        if (this._calculatedPosition.equals(this.satellite.position))\n            return; // doesn't need updating.\n        this._calculatedPosition.copy(this.satellite.position);\n        this._height = this._calculatedPosition.length();\n        tempSpherical.setFromVector3(this._calculatedPosition);\n        this._latitude = Math.PI / 2 - tempSpherical.phi;\n        if (!isCritical(this._latitude + Math.PI / 2))\n            this._longitude = fixAngle(tempSpherical.theta - Math.PI / 2);\n    }\n    applyPosition() {\n        tempEuler.set(0, this._longitude, this._latitude, 'YZX');\n        this.satellite.position.set(this._height, 0, 0).applyEuler(tempEuler);\n        this.applyVelocity();\n    }\n    get height() {\n        this.updatePosition();\n        return this._height;\n    }\n    set height(value) {\n        this.satellite.position.normalize().multiplyScalar(value);\n    }\n    get longitude() {\n        this.updatePosition();\n        return this._longitude * TO_DEGREE;\n    }\n    set longitude(value) {\n        this._longitude = value * TO_RADIAN;\n        this.applyPosition();\n    }\n    get latitude() {\n        this.updatePosition();\n        return this._latitude * TO_DEGREE;\n    }\n    set latitude(value) {\n        this._latitude = value * TO_RADIAN;\n        this.applyPosition();\n    }\n    updateVelocity() {\n        if (this._calculatedVelocity.equals(this.satellite.velocity))\n            return; // doesn't need updating.\n        this._calculatedVelocity.copy(this.satellite.velocity);\n        this._velocity = this._calculatedVelocity.length();\n        this.updatePosition();\n        tempEuler.set(Math.PI, -this._longitude, -this._latitude - Math.PI / 2, 'XZY'); // undo the orbital pane.\n        tempVector.copy(this._calculatedVelocity).applyEuler(tempEuler);\n        tempSpherical.setFromVector3(tempVector);\n        this._theta = Math.PI - tempSpherical.phi;\n        if (!isCritical(this._theta))\n            this._inclination = tempSpherical.theta;\n        if (Math.abs(this._inclination) < 1e-6)\n            this._inclination = 0;\n        if (this.preview)\n            this.app.world.ghost.state = this.satellite;\n    }\n    applyVelocity() {\n        tempEuler.set(this._inclination, this._longitude, this._latitude, 'YZX');\n        this.satellite.velocity\n            .set(Math.cos(this._theta), 0, Math.sin(this._theta))\n            .multiplyScalar(-this._velocity).applyEuler(tempEuler);\n    }\n    get velocity() {\n        this.updateVelocity();\n        return this._velocity;\n    }\n    set velocity(value) {\n        this.satellite.velocity.normalize().multiplyScalar(value);\n    }\n    get inclination() {\n        this.updateVelocity();\n        return this._inclination * TO_DEGREE;\n    }\n    set inclination(value) {\n        this._inclination = value * TO_RADIAN;\n        this.applyVelocity();\n    }\n    get theta() {\n        this.updateVelocity();\n        return this._theta * TO_DEGREE;\n    }\n    set theta(value) {\n        this._theta = value * TO_RADIAN;\n        this.applyVelocity();\n    }\n    get scale() {\n        return this._scale;\n    }\n    set scale(value) {\n        this._scale = value;\n        this.satellite.scale.set(value, value, value);\n        this.satellite.collisionRadius = Satellite.defaultCollisionRadius * value;\n    }\n    get follow() {\n        return this.app.followedObject !== undefined;\n    }\n    set follow(value) {\n        this.app.followedObject = value ? this.satellite : undefined;\n    }\n    get selectedSatelliteOption() {\n        return (this.satelliteId === -1) ? NEW_SATELLITE : `${this.satelliteId}: ${this.satellite.name}`;\n    }\n    set selectedSatelliteOption(name) {\n        this.satelliteId = (name === NEW_SATELLITE) ? -1 : parseInt(name.split(':')[0]);\n    }\n    hotReplaceApplication(app) {\n        this.app = app;\n        this.apply();\n    }\n    newDraftSatellite() {\n        const satellite = Satellite.spawn(this.spawnPosition, this.spawnVelocity);\n        satellite.name = `Satellite #${this.nextSatelliteId}`;\n        return satellite;\n    }\n    apply() {\n        this.app.world.ghost.state = this.satellite; // _POLYMORPHISM_.\n        this.app.world.ghost.visible = this.preview;\n    }\n    updateSatellitesList() {\n        this.satelliteController = this.satelliteController.options([NEW_SATELLITE, ...this.app.world.satellites.map(({ name }, id) => `${id}: ${name}`)]);\n    }\n    refreshInterface() {\n        this.actionController.name(this.satelliteId === -1 ? 'Spawn Satellite' : 'Delete Satellite');\n        this.folder.controllersRecursive().forEach(controller => controller.updateDisplay());\n    }\n    action() {\n        if (this.satelliteId === -1)\n            this.spawn();\n        else\n            this.delete();\n    }\n    delete() {\n        this.app.toaster.toast(`Satellite ${this.name ? `\"${this.name}\"` : `#${this.satelliteId}`} has been deleted.`, 'alert');\n        this.app.world.removeSatellite(this.satellite);\n        this.satelliteId = -1;\n        this.updateSatellitesList();\n    }\n    spawn() {\n        this.nextSatelliteId++;\n        this.spawnPosition.copy(this.satellite.position);\n        this.spawnVelocity.copy(this.satellite.velocity);\n        this.app.world.addSatellite(this.satellite);\n        this.satellite.addDestructionListener(this.onSatelliteDestroyed.bind(this));\n        this.updateSatellitesList();\n        this.satelliteId = -1;\n    }\n    onSatelliteDestroyed(satellite) {\n        this.updateSatellitesList();\n        if (this.satelliteId === -1)\n            return;\n        if (this.satellite === satellite)\n            this.satelliteId = -1;\n        else if (this.app.world.satellites[this.satelliteId] !== this.satellite)\n            this.satelliteId--;\n    }\n}\n","export default class SunInterface {\n    constructor(gui, app) {\n        this.gui = gui;\n        this.app = app;\n        this.folder = this.gui.addFolder('Sun');\n        this.distance = this.app.world.sun.distance;\n        this.intensity = Math.log10(this.app.world.sun.intensity / 2);\n        this.radius = this.app.world.sun.radius;\n        this.color = this.app.world.sun.color;\n        this.wireframe = this.app.world.sun.wireframe;\n        this.lensflareScale = 1;\n        this.folder.open(false); // closed by default.\n        const minIntensity = this.intensity - 2;\n        const maxIntensity = this.intensity + 1;\n        this.folder.add(this, 'distance', 60, this.app.world.sun.distance).name('Distance');\n        this.folder.add(this, 'radius', 0, this.app.world.sun.radius).name('Radius');\n        this.folder.add(this, 'intensity', minIntensity, maxIntensity).name('Light Intensity');\n        this.folder.addColor(this, 'color').name('Color');\n        this.folder.add(this, 'wireframe').name('Wireframe');\n        this.folder.add(this, 'lensflareScale').name('Lensflare').min(0.1).max(30).step(0.1);\n        this.folder.onChange(this.apply.bind(this));\n        this.apply();\n    }\n    hotReplaceApplication(app) {\n        this.app = app;\n        this.apply();\n    }\n    apply() {\n        this.app.world.sun.distance = this.distance;\n        this.app.world.sun.intensity = Math.pow(10, this.intensity) * 2;\n        this.app.world.sun.radius = this.radius;\n        this.app.world.sun.color = this.color;\n        this.app.world.sun.wireframe = this.wireframe;\n        this.app.world.sun.lensflareScaler = this.lensflareScale;\n    }\n}\n","// All variable names can be found here: https://lil-gui.georgealways.com/examples/kitchen-sink/\nconst propertyToVariableMap = {\n    fontSize: '--font-size',\n    inputFontSize: '--input-font-size',\n    spacing: '--spacing',\n};\nexport default class GUIInterface {\n    constructor(gui, app) {\n        this.gui = gui;\n        this.app = app;\n        this.folder = this.gui.addFolder('GUI Styles').onChange(this.onChange.bind(this));\n        this.guiContainer = document.querySelector(\".lil-gui.root\");\n        this.allGuiElements = document.querySelectorAll('.lil-gui');\n        this.getproperties = () => {\n            const oldproperties = localStorage.getItem('guiproperties');\n            if (oldproperties)\n                return JSON.parse(oldproperties);\n            // Default properties\n            return { fontSize: 11, spacing: 4 };\n        };\n        this.properties = this.getproperties();\n        this.folder.open(false);\n        this.folder\n            .add(this.properties, 'fontSize')\n            .name('Font size')\n            .min(11)\n            .max(30)\n            .step(1);\n        this.folder\n            .add(this.properties, 'spacing')\n            .name('Spacing')\n            .min(4)\n            .max(20)\n            .step(1);\n        this.updateGUIStyles(this.properties);\n    }\n    updateGUIStyles(properties) {\n        for (const [key, value] of Object.entries(properties)) {\n            const CSSVariableName = propertyToVariableMap[key];\n            if (CSSVariableName) {\n                // You have to loop over all lil-gui's elements, otherwise\n                // only the first one will be updated because of CSS inheritance.\n                this.allGuiElements.forEach((element) => {\n                    element.style.setProperty(CSSVariableName, value + 'px');\n                    // Update both font size and input size at once\n                    if (key === 'fontSize') {\n                        const inputFontSizeVariable = propertyToVariableMap['inputFontSize'];\n                        element.style.setProperty(inputFontSizeVariable, value + 'px');\n                    }\n                });\n            }\n        }\n    }\n    hotReplaceApplication(app) {\n        this.app = app;\n    }\n    onChange({ property, value }) {\n        this.updateGUIStyles({ [property]: value });\n        localStorage.setItem('guiproperties', JSON.stringify(this.properties));\n    }\n}\n","import 'preloader';\nimport Application from 'app';\nimport Interface from 'interface';\nconst container = document.createElement('div');\ncontainer.style.width = '100%';\ncontainer.style.height = '100%';\ndocument.body.appendChild(container);\nlet application = new Application(container);\nconst userInterface = new Interface(application);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwindow.application = application;\nif (module.hot) {\n    module.hot.accept('./app', () => {\n        const oldApplication = application;\n        oldApplication.destroy();\n        application = new Application(container);\n        application.restoreState(oldApplication);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.application = application;\n        userInterface.hotReplaceApplication(application);\n    });\n}\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport World from 'components/world';\nimport { EARTH_DISTANCE, EARTH_RADIUS, SIMULATION_SCALE } from 'physics/constants';\nimport Toaster from 'interface/toaster';\n/**\n * THREE.js Application.\n */\nexport default class Application {\n    constructor(container) {\n        this.container = container;\n        this.renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            logarithmicDepthBuffer: true,\n        });\n        this.camera = new THREE.PerspectiveCamera(75, this.renderer.domElement.width / this.renderer.domElement.height, 0.1, EARTH_DISTANCE * 1.2 * SIMULATION_SCALE);\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.stats = Stats();\n        this.toaster = new Toaster();\n        this._world = new World();\n        this._statsVisible = false;\n        this.setupComponents();\n        this.updateResolution();\n        // integrate with the browser DOM.\n        this.resizeCallback = this.updateResolution.bind(this);\n        container.appendChild(this.renderer.domElement);\n        window.addEventListener('resize', this.resizeCallback);\n        if (module.hot)\n            module.hot.addDisposeHandler(() => window.removeEventListener('resize', this.resizeCallback));\n        this.renderer.setAnimationLoop(this.render.bind(this));\n        this.world.onSatelliteDestruction = (satellite) => this.toaster.toast(`${satellite.name} has collided and was destroyed!`, 'explosion');\n        this.showStats = true;\n    }\n    get world() { return this._world; }\n    get showStats() { return this._statsVisible; }\n    set showStats(value) {\n        if (this._statsVisible === value)\n            return;\n        this._statsVisible = value;\n        if (value)\n            this.container.appendChild(this.stats.dom);\n        else\n            this.container.removeChild(this.stats.dom);\n    }\n    get followedObject() { return this._followedObject; }\n    set followedObject(object) {\n        this._followedObject = object;\n        this.camera.position.normalize().multiplyScalar(object ? 1e7 : EARTH_RADIUS * 4);\n    }\n    /**\n     * Restore the state from a previous instance of the application.\n     * This facilitates HMR (Hot Module Replacement).\n     */\n    restoreState(application) {\n        this.camera.position.copy(application.camera.position);\n        this.camera.rotation.copy(application.camera.rotation);\n        this.camera.zoom = application.camera.zoom;\n        this.controls.target.copy(application.controls.target);\n        this.controls.update();\n    }\n    /**\n     * Configures the application's components\n     */\n    setupComponents() {\n        this.renderer.physicallyCorrectLights = true;\n        this.camera.position.z = EARTH_RADIUS * 4 * SIMULATION_SCALE;\n        this.controls.enableDamping = true;\n        this.world.scale.multiplyScalar(SIMULATION_SCALE);\n    }\n    updateResolution() {\n        this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n        this.camera.aspect = this.renderer.domElement.width / this.renderer.domElement.height;\n        this.camera.updateProjectionMatrix();\n    }\n    render() {\n        this.world.update();\n        this.followObject();\n        this.controls.update();\n        this.renderer.render(this.world, this.camera);\n        this.stats.update();\n    }\n    followObject() {\n        if (!this.followedObject)\n            return;\n        const cameraDistance = Math.min(Math.max(this.camera.position.distanceTo(this.followedObject.position), 0.75e7), 2e7);\n        const objectDistance = this.followedObject.position.length();\n        this.camera.position.copy(this.followedObject.position).multiplyScalar((cameraDistance + objectDistance) / objectDistance);\n        this.camera.lookAt(this.followedObject.position);\n        this.controls.target.copy(this.followedObject.position);\n    }\n    destroy() {\n        if (this._statsVisible)\n            this.stats.domElement.remove();\n        this.renderer.domElement.remove();\n        this.renderer.setAnimationLoop(null);\n        this.container.removeEventListener('resize', this.resizeCallback);\n    }\n}\n","import GUI from 'lil-gui';\nimport SimulationInterface from './simulation-interface';\nimport CameraInterface from './camera-interface';\nimport PlanetInterface from './planet-interface';\nimport SatellitesInterface from './satellites-interface';\nimport SunInterface from './sun-interface';\nimport GUIInterface from './gui-styles-interface';\nexport default class Interface {\n    constructor(app) {\n        this.app = app;\n        this.gui = new GUI({\n            title: 'Satellites Simulator VI: Deluxe Edition',\n            width: 500,\n        });\n        this.simulation = new SimulationInterface(this.gui, app);\n        this.sun = new SunInterface(this.gui, app);\n        this.planet = new PlanetInterface(this.gui, app);\n        this.satellites = new SatellitesInterface(this.gui, app);\n        this.camera = new CameraInterface(this.gui, app);\n        this.guiStyles = new GUIInterface(this.gui, app);\n    }\n    hotReplaceApplication(app) {\n        this.simulation.hotReplaceApplication(app);\n        this.sun.hotReplaceApplication(app);\n        this.camera.hotReplaceApplication(app);\n        this.planet.hotReplaceApplication(app);\n        this.satellites.hotReplaceApplication(app);\n    }\n    destroy() {\n        this.gui.destroy();\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksatellite_simulator\"] = self[\"webpackChunksatellite_simulator\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [253], () => (__webpack_require__(410)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","push","module","id","preloader","document","querySelector","downloadInfo","itemsCount","loadingManager","onLoad","innerText","setTimeout","classList","add","addEventListener","remove","onProgress","url","itemsLoaded","itemsTotal","fileURL","length","slice","filesText","onError","console","error","BodyShape","_quaternion","_matrix","_target","_position","SimulatedObject","constructor","_physicsType","_mass","faceArea","shape","sphere","super","this","velocity","appliedForces","physicsType","mass","value","multiplyScalar","Math","sqrt","lookAt","vector","y","z","copy","set","parent","updateWorldMatrix","setFromMatrixPosition","matrixWorld","quaternion","setFromRotationMatrix","extractRotation","premultiply","invert","tempVector","Planet","_radius","EARTH_RADIUS","geometry","material","mesh","atmosphereGeometry","radius","atmosphereHeight","atmosphereMaterial","transparent","opacity","color","metalness","atmosphere","_atmosphereHeight","_atmosphereDensity","period","visible","onCollision","collisionRadius","angularVelocity","PI","dispose","atmosphereDensity","log10","atmosphereVisible","toArray","fromArray","wireframe","bumpScale","texture","pack","_a","_b","_c","_d","_e","_f","map","colorMap","bumpMap","aoMap","emissiveMap","metalnessMap","needsUpdate","exertForce","body","force","exertGravityForce","exertDragForce","subVectors","position","distanceSq","lengthSq","normalize","distance","distanceTo","relativeVelocity","relativeVelocitySq","drag","update","dt","rotateY","temporaryVector","sphereCollidesWithSphere","otherBody","Simulation","timeResolution","bodies","activeBodies","rigidBodies","filter","other","run","delta","step","min","calculateAppliedForces","integrateBodiesAcceleration","integrateBodiesVelocity","checkCollisions","activeBody","exertedForce","deltaVelocity","divideScalar","displacement","SimulatedSpace","scene","simulation","addTo","removeFrom","loader","cubeLoader","earthTexture","load","jupiterTexture","marsTexture","sunTexture","skyBoxTexture","lensflareBaseTexture","lensflareExtraTexture","Sun","EARTH_DISTANCE","light","pow","lensflareScaler","intensity","clear","lensflare","Lensflare","addElement","GhostSatellite","positionArrow","undefined","velocityArrow","state","setLength","setDirection","CollisionParticles","collisionPosition","size","particlesMovementSpeed","PARTICLES_COUNT","fadeOutFactor","particles","Float32Array","particleVelocities","setAttribute","initializeParticles","i","x","random","attributes","isDone","World","clock","simulatedSpace","sun","planet","ghost","satellites","paused","timescale","collisions","background","getDelta","forEach","satellite","collision","obj","addSatellite","trail","addDestructionListener","collisionParticles","removeSatellite","onSatelliteDestruction","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","Toaster","toastDuration","toastContainer","createElement","style","setProperty","append","createToast","text","type","toast","addToastAndAnimateContainer","heightBeforeAppending","offsetHeight","appendChild","keyframes","transform","animate","duration","easing","addToast","children","thisArg","_arguments","generator","Promise","allSettled","getAnimations","animation","finished","removeChild","P","resolve","reject","fulfilled","next","e","rejected","result","done","then","apply","SimulationInterface","gui","app","folder","addFolder","resolution","world","open","name","max","onChange","bind","hotReplaceApplication","CameraInterface","actions","reset","lookAtOrigin","lookAtX","lookAtY","lookAtZ","controls","camera","target","textures","abstract","earth","jupiter","mars","texturesOptions","Object","keys","key","charAt","toUpperCase","PlanetInterface","toLowerCase","controllers","find","c","property","updateDisplay","addColor","satelliteModel","GLTFLoader","loadAsync","Trail","followedObject","MAX_TRAIL_POINTS","positions","points","currentDrawingIndex","hasReachedMaxTrailPoints","verticesToDraw","setDrawRange","Satellite","defaultCollisionRadius","destructionListeners","model","clone","scale","listener","static","TO_DEGREE","TO_RADIAN","tempEuler","tempSpherical","isCritical","angle","critical","angle2","abs","NEW_SATELLITE","SatellitesInterface","nextSatelliteId","_satelliteId","spawnPosition","spawnVelocity","newDraftSatellite","_calculatedPosition","_height","_longitude","_latitude","_calculatedVelocity","_velocity","_inclination","_theta","_scale","preview","actionBound","action","satelliteController","listen","actionController","satelliteId","follow","refreshInterface","updateSatellitesList","updatePosition","radian","equals","setFromVector3","phi","theta","applyPosition","applyEuler","applyVelocity","height","longitude","latitude","updateVelocity","cos","sin","inclination","selectedSatelliteOption","parseInt","split","spawn","controllersRecursive","controller","delete","toaster","onSatelliteDestroyed","SunInterface","lensflareScale","minIntensity","maxIntensity","propertyToVariableMap","fontSize","inputFontSize","spacing","GUIInterface","guiContainer","allGuiElements","querySelectorAll","getproperties","oldproperties","localStorage","getItem","JSON","parse","properties","updateGUIStyles","entries","CSSVariableName","element","inputFontSizeVariable","setItem","stringify","container","width","application","renderer","antialias","logarithmicDepthBuffer","domElement","OrbitControls","stats","_world","_statsVisible","setupComponents","updateResolution","resizeCallback","window","setAnimationLoop","render","showStats","dom","_followedObject","object","restoreState","rotation","zoom","physicallyCorrectLights","enableDamping","setSize","clientWidth","clientHeight","aspect","updateProjectionMatrix","followObject","cameraDistance","objectDistance","destroy","removeEventListener","title","guiStyles","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","nmd","paths","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","Error","replace","p","b","baseURI","self","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","nc","__webpack_exports__"],"sourceRoot":""}